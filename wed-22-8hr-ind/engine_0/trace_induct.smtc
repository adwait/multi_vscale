initial
assume (= [$formal$formal-ind.v:115$49_CHECK] #b1)
assume (= [$formal$formal-ind.v:115$49_EN] #b0)
assume (= [arbiter.cur_core] #b1)
assume (= [arbiter.prev_core] #b1)
assume (= [core_gen_block[0].vscale.pipeline.PC_DX] #b11100000000000001011000001000110)
assume (= [core_gen_block[0].vscale.pipeline.PC_IF] #b11100000000000001011000001000100)
assume (= [core_gen_block[0].vscale.pipeline.PC_WB] #b01000001010001100010010110100100)
assume (= [core_gen_block[0].vscale.pipeline.alu_out_WB] #b00000101101000010001000100110111)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30776] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30779] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30782] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30785] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30788] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30791] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30794] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30797] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30800] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30803] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30806] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30809] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30812] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30815] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30818] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30821] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30824] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30827] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30830] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30833] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30836] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30839] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30842] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30845] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30848] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30851] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30854] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30857] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30860] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30863] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30866] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30869] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.cycle_full] #b0110001000100010100001111110000011111111111111001111111111111001)
assume (= [core_gen_block[0].vscale.pipeline.csr.from_host] #b10000100100010111111011101000101)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[0]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[10]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[11]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[12]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[13]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[14]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[15]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[16]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[17]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[18]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[19]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[1]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[20]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[21]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[22]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[23]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[24]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[25]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[26]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[27]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[28]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[29]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[2]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[30]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[31]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[3]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[4]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[5]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[6]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[7]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[8]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[9]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_state] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.instret_full] #b1000111001011101001011000100111100000000000000001111111111110100)
assume (= [core_gen_block[0].vscale.pipeline.csr.mbadaddr] #b00000000000000000111010101110110)
assume (= [core_gen_block[0].vscale.pipeline.csr.mecode] #b0000)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[10]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[11]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[12]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[13]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[14]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[15]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[16]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[17]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[18]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[19]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[20]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[21]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[22]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[23]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[24]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[25]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[26]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[27]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[28]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[29]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[2]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[30]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[31]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[3]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[4]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[5]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[6]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[7]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[8]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[9]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mint] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mscratch] #b10000000000000000000000010011100)
assume (= [core_gen_block[0].vscale.pipeline.csr.msie] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.msip] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtie] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtime_full] #b0000000000000000000000000001111101111111111111111111111111110011)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtimecmp] #b01111111111111111111111111111101)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtip] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[10]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[11]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[12]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[13]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[14]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[15]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[16]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[17]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[18]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[19]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[20]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[21]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[22]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[23]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[24]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[25]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[26]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[27]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[28]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[29]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[2]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[30]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[31]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[3]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[4]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[5]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[6]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[7]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[8]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[9]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.priv_stack] #b101011)
assume (= [core_gen_block[0].vscale.pipeline.csr.time_full] #b0000000000000000000000000000100100000000011111111111111111111111)
assume (= [core_gen_block[0].vscale.pipeline.csr.to_host] #b00000000000000000000000000000100)
assume (= [core_gen_block[0].vscale.pipeline.csr_rdata_WB] #b00000000000000000000000000000010)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.dmem_en_WB] #b1)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.had_ex_DX] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.had_ex_WB] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.prev_ex_code_WB_reg[0]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.prev_ex_code_WB_reg[1]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.prev_ex_code_WB_reg[3]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.prev_killed_DX] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.prev_killed_WB] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.reg_to_wr_WB] #b00001)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.replay_IF] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.store_in_WB] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.uses_md_WB] #b1)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.wb_src_sel_WB] #b10)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.wr_reg_unkilled_WB] #b1)
assume (= [core_gen_block[0].vscale.pipeline.dmem_type_WB] #b001)
assume (= [core_gen_block[0].vscale.pipeline.inst_DX] #b00010000000101010101000111100011)
assume (= [core_gen_block[0].vscale.pipeline.md.a] #b0111101100010001000011011101101100110100000010111111010000101000)
assume (= [core_gen_block[0].vscale.pipeline.md.b] #b0100001010101101110110111000000101111100101111011111011100111100)
assume (= [core_gen_block[0].vscale.pipeline.md.counter] #b00100)
assume (= [core_gen_block[0].vscale.pipeline.md.negate_output] #b1)
assume (= [core_gen_block[0].vscale.pipeline.md.op] #b10)
assume (= [core_gen_block[0].vscale.pipeline.md.out_sel] #b10)
assume (= [core_gen_block[0].vscale.pipeline.md.result] #b0000000000000000000000000000001111101111001000111110000000110111)
assume (= [core_gen_block[0].vscale.pipeline.md.state] #b01)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[0]] #b00000111101001010110101000001001)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[10]] #b10110111110111111111011001101111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[11]] #b10100000001010101100100101111111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[12]] #b01111110101111111111111100100111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[13]] #b11111111111111111111111101111111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[14]] #b00010010100000100010000000001111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[15]] #b00000000000000000000000000001111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[16]] #b11100110010111100011111000111111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[17]] #b11101111111111111111111111111111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[18]] #b00100110110001010010010100101111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[19]] #b11111110111001110011110011111111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[1]] #b00000000100010000000000101000001)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[20]] #b11111011010010110011101111101111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[21]] #b01111111010110111111111111111111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[22]] #b01001001000001000010001010001110)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[23]] #b11111111111111111111111111111101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[24]] #b11111111111101111011011110101111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[25]] #b11111110111111111111111101101111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[26]] #b11111110110111111111011111111111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[27]] #b11110101101000110110110100111111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[28]] #b11111111011111110111111101101111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[29]] #b11111111111111111111111111111111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[2]] #b00011011101000100110011100100000)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[30]] #b00100001100101000000011010001111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[31]] #b10111110001010101011010011111111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[3]] #b11111111101001111101010111110000)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[4]] #b00011001001110001010001101001101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[5]] #b11111111011111111111111111111111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[6]] #b00000000000000000000000000000110)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[7]] #b10000000011100010001000011000001)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[8]] #b11101101110111100011001100100000)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[9]] #b11011101111101111111111101111111)
assume (= [core_gen_block[0].vscale.pipeline.store_data_WB] #b10010000101000001110011111000101)
assume (= [counter] #b101)
assume (= [hasti_mem.mem$rdreg_reg[32]$q[0]] #b0)
assume (= [hasti_mem.mem$rdreg_reg[32]$q[1]] #b0)
assume (= [hasti_mem.mem$rdreg_reg[32]$q[2]] #b0)
assume (= [hasti_mem.mem$rdreg_reg[32]$q[3]] #b0)
assume (= [hasti_mem.mem$rdreg_reg[32]$q[4]] #b1)
assume (= [hasti_mem.mem$rdreg_reg[33]$q[0]] #b1)
assume (= [hasti_mem.mem$rdreg_reg[33]$q[1]] #b0)
assume (= [hasti_mem.mem$rdreg_reg[33]$q[2]] #b1)
assume (= [hasti_mem.mem$rdreg_reg[33]$q[3]] #b0)
assume (= [hasti_mem.mem$rdreg_reg[33]$q[4]] #b1)
assume (= [hasti_mem.mem[0]] #b11111110111011011011111010101101)
assume (= [hasti_mem.mem[10]] #b11111111111111111111111111111111)
assume (= [hasti_mem.mem[11]] #b11111111111011011111111111011111)
assume (= [hasti_mem.mem[12]] #b11111111101111111111111111100111)
assume (= [hasti_mem.mem[13]] #b11111111111111111111111011101111)
assume (= [hasti_mem.mem[14]] #b11111111001111111110111001010111)
assume (= [hasti_mem.mem[15]] #b11111111111111111111111011011101)
assume (= [hasti_mem.mem[16]] #b11111110111011011111111011101101)
assume (= [hasti_mem.mem[17]] #b11110001010101011111010000000011)
assume (= [hasti_mem.mem[18]] #b00001001000101111000001011101111)
assume (= [hasti_mem.mem[19]] #b01011000111100001111011010000111)
assume (= [hasti_mem.mem[1]] #b11111111110111011111111100001110)
assume (= [hasti_mem.mem[20]] #b11111110111011011111111011101111)
assume (= [hasti_mem.mem[21]] #b11111110111011111111111111111111)
assume (= [hasti_mem.mem[22]] #b00001000001000001000001100000011)
assume (= [hasti_mem.mem[23]] #b10010110011100110001101010110011)
assume (= [hasti_mem.mem[24]] #b11111110111011011111111011101101)
assume (= [hasti_mem.mem[25]] #b11111111111111011011111111011011)
assume (= [hasti_mem.mem[26]] #b10101110101001111001111000110111)
assume (= [hasti_mem.mem[27]] #b01111111111001011111111010100011)
assume (= [hasti_mem.mem[28]] #b11111110101011011100111011111111)
assume (= [hasti_mem.mem[29]] #b11111100000111111110111111011011)
assume (= [hasti_mem.mem[2]] #b11111111110000111101111101110111)
assume (= [hasti_mem.mem[30]] #b00110010000101111110101011100011)
assume (= [hasti_mem.mem[31]] #b01110110111001111110111111101011)
assume (= [hasti_mem.mem[3]] #b10111111111111110111111111011111)
assume (= [hasti_mem.mem[4]] #b01010110000100011111110101110011)
assume (= [hasti_mem.mem[5]] #b11010110101100101111110000001110)
assume (= [hasti_mem.mem[6]] #b11111111111011111111111111111011)
assume (= [hasti_mem.mem[7]] #b01111111111111111111111111111111)
assume (= [hasti_mem.mem[8]] #b01111110111011011111111111111111)
assume (= [hasti_mem.mem[9]] #b11111111111111111111111111111111)
assume (= [hasti_mem.p0_state] #b0)
assume (= [hasti_mem.p0_waddr] #b11110100000010111110100010110000)
assume (= [hasti_mem.p0_wsize] #b010)
assume (= [hasti_mem.p0_wvalid] #b1)
assume (= [hasti_mem.p1_bypass[0]] #b0)
assume (= [head_ptr] #b01)
assume (= [init] #b0)
assume (= [next_pc] #b00000000000000000000000001110100)
assume (= [windows[0]] #b00000000000000000000000001111001)
assume (= [windows[1]] #b01000001010001100010010110100100)
assume (= [windows[2]] #b11100000000000001011000001000100)
assume (= (select [events] #b10) #b011)
assume (= (select [events] #b01) #b011)
assume (= (select [events] #b00) #b011)

state 0
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000011010011111101110000101110001011)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] false)

state 1
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000011010010011101100000100111011100)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] #b0)

state 2
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b110100101010)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000001001010101011111111111110100011)
assume (= [htif_pcr_req_rw] false)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] #b0)

state 3
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000011000110011101100001100111001100)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] #b0)

state 4
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b111110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000111111101110111110110010111110)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] #b0)

state 5
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b111110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000011000011000100100001110100001101)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] #b0)

state 6
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b111110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000100111000010111111111110011011)
assume (= [htif_pcr_req_rw] false)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] #b0)

state 7
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b111110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000010000100000011100000110010100111)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] #b0)

state 8
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b110100101010)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000010000010100110001100011001010100)
assume (= [htif_pcr_req_rw] false)
assume (= [htif_pcr_req_valid] false)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] #b0)

state 9
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b111110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000010001000000000000110100100101001)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] #b0)

state 10
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b110100101010)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000101010010000000000110010101101)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] #b0)

state 11
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b111110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000101100001000000000000010001000)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] false)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] #b0)

state 12
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b010110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000000010100000001110110111011110)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] #b0)

state 13
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000011010110011111001111111101100)
assume (= [htif_pcr_req_rw] false)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] #b0)

state 14
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b010110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000010010110011111001111110001110)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] #b0)

state 15
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000000000000001101110111011010110)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] #b0)

state 16
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b000000000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000000000000000000000000000000000)
assume (= [htif_pcr_req_rw] false)
assume (= [htif_pcr_req_valid] false)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] #b0)

state 17
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b000000000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000000000000000000000000000000000)
assume (= [htif_pcr_req_rw] false)
assume (= [htif_pcr_req_valid] false)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] #b0)
