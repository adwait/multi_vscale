initial
assume (= [$formal$formal.v:107$47_CHECK] #b1)
assume (= [$formal$formal.v:107$47_EN] #b0)
assume (= [arbiter.cur_core] #b1)
assume (= [arbiter.prev_core] #b1)
assume (= [core_gen_block[0].vscale.pipeline.PC_DX] #b00100100111111110111111010111111)
assume (= [core_gen_block[0].vscale.pipeline.PC_IF] #b00000000111101110110110000100111)
assume (= [core_gen_block[0].vscale.pipeline.PC_WB] #b00000101111001111111111000101011)
assume (= [core_gen_block[0].vscale.pipeline.alu_out_WB] #b11010001000110100100000101000000)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30759] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30762] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30765] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30768] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30771] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30774] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30777] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30780] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30783] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30786] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30789] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30792] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30795] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30798] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30801] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30804] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30807] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30810] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30813] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30816] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30819] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30822] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30825] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30828] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30831] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30834] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30837] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30840] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30843] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30846] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30849] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.$auto$async2sync.cc:171:execute$30852] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.cycle_full] #b1111111111111111111111111111111111111111111111111111111111111111)
assume (= [core_gen_block[0].vscale.pipeline.csr.from_host] #b00000000000000000000000000000000)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[0]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[10]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[11]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[12]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[13]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[14]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[15]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[16]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[17]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[18]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[19]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[1]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[20]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[21]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[22]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[23]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[24]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[25]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[26]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[27]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[28]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[29]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[2]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[30]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[31]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[3]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[4]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[5]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[6]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[7]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[8]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_resp_data_reg[9]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.htif_state] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.instret_full] #b0000000000000000000011111001011011111111101111000100100011111111)
assume (= [core_gen_block[0].vscale.pipeline.csr.mbadaddr] #b11111111111111111111101100000000)
assume (= [core_gen_block[0].vscale.pipeline.csr.mecode] #b0000)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[10]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[11]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[12]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[13]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[14]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[15]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[16]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[17]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[18]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[19]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[20]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[21]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[22]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[23]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[24]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[25]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[26]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[27]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[28]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[29]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[2]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[30]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[31]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[3]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[4]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[5]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[6]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[7]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[8]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mepc_reg[9]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mint] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mscratch] #b00100000000000000000100000000000)
assume (= [core_gen_block[0].vscale.pipeline.csr.msie] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.msip] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtie] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtime_full] #b0000000000000000000000000000000010011111111000110100010000100111)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtimecmp] #b10010111010000000100010010101011)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtip] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[10]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[11]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[12]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[13]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[14]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[15]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[16]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[17]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[18]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[19]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[20]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[21]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[22]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[23]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[24]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[25]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[26]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[27]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[28]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[29]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[2]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[30]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[31]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[3]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[4]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[5]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[6]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[7]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[8]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.mtvec_reg[9]] #b1)
assume (= [core_gen_block[0].vscale.pipeline.csr.priv_stack] #b000110)
assume (= [core_gen_block[0].vscale.pipeline.csr.time_full] #b1111111111111111111111111111111111111111111111111111111111111111)
assume (= [core_gen_block[0].vscale.pipeline.csr.to_host] #b00000000000000000000000000000011)
assume (= [core_gen_block[0].vscale.pipeline.csr_rdata_WB] #b00000000000000000000010000000000)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.dmem_en_WB] #b1)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.had_ex_DX] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.had_ex_WB] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.prev_ex_code_WB_reg[0]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.prev_ex_code_WB_reg[1]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.prev_ex_code_WB_reg[3]] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.prev_killed_DX] #b1)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.prev_killed_WB] #b1)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.reg_to_wr_WB] #b00000)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.replay_IF] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.store_in_WB] #b0)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.uses_md_WB] #b1)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.wb_src_sel_WB] #b11)
assume (= [core_gen_block[0].vscale.pipeline.ctrl.wr_reg_unkilled_WB] #b0)
assume (= [core_gen_block[0].vscale.pipeline.dmem_type_WB] #b001)
assume (= [core_gen_block[0].vscale.pipeline.inst_DX] #b00000000000000000001000000001111)
assume (= [core_gen_block[0].vscale.pipeline.md.a] #b0000000000000000000100000000000011110110100010101110101000010111)
assume (= [core_gen_block[0].vscale.pipeline.md.b] #b0001011111111111111111101101101101111110100000001000101000010001)
assume (= [core_gen_block[0].vscale.pipeline.md.counter] #b11110)
assume (= [core_gen_block[0].vscale.pipeline.md.negate_output] #b0)
assume (= [core_gen_block[0].vscale.pipeline.md.op] #b10)
assume (= [core_gen_block[0].vscale.pipeline.md.out_sel] #b10)
assume (= [core_gen_block[0].vscale.pipeline.md.result] #b0000100000000000000000000010000000001110100000100111100000010100)
assume (= [core_gen_block[0].vscale.pipeline.md.state] #b11)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[0]] #b01101111001101000011010011001111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[10]] #b10000010100000000000011001011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[11]] #b00000100000000000000000000011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[12]] #b00010000000000100000000001011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[13]] #b00010100001000101000100011011111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[14]] #b10011100001001100010100101011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[15]] #b01011100000000000011000001001111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[16]] #b00111100101001000001010011011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[17]] #b00000100001000000000000000001111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[18]] #b10100110100000000001010101011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[19]] #b01000100000000000000000011111101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[1]] #b00000000000000000000010000000110)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[20]] #b11111100101001000010000011011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[21]] #b00111000001000100000000011001111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[22]] #b11110100001000010010010111011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[23]] #b01110110101000010000000001111111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[24]] #b10111000001000000011010001011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[25]] #b00111100001000000000100011011111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[26]] #b00100000101000000001000001011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[27]] #b00000100001000000000000000101111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[28]] #b00000001000000000000100001011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[29]] #b00100010101100100010001101011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[2]] #b00000000000000010000000000000101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[30]] #b11001001000000000001000001011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[31]] #b10000110001000000001100011101111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[3]] #b00000100001000000000000100001110)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[4]] #b10110000001000100001010101011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[5]] #b10000000000000001000000001011111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[6]] #b11110011000000101000000001011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[7]] #b00000000000000000000000000111111)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[8]] #b11011100101000000001010001011101)
assume (= [core_gen_block[0].vscale.pipeline.regfile.data[9]] #b01001000000110101100001011011111)
assume (= [core_gen_block[0].vscale.pipeline.store_data_WB] #b00000000000000000000000000000000)
assume (= [counter] #b0000)
assume (= [hasti_mem.mem$rdreg_reg[32]$q[0]] #b1)
assume (= [hasti_mem.mem$rdreg_reg[32]$q[1]] #b1)
assume (= [hasti_mem.mem$rdreg_reg[32]$q[2]] #b0)
assume (= [hasti_mem.mem$rdreg_reg[32]$q[3]] #b1)
assume (= [hasti_mem.mem$rdreg_reg[32]$q[4]] #b0)
assume (= [hasti_mem.mem$rdreg_reg[33]$q[0]] #b0)
assume (= [hasti_mem.mem$rdreg_reg[33]$q[1]] #b0)
assume (= [hasti_mem.mem$rdreg_reg[33]$q[2]] #b1)
assume (= [hasti_mem.mem$rdreg_reg[33]$q[3]] #b1)
assume (= [hasti_mem.mem$rdreg_reg[33]$q[4]] #b1)
assume (= [hasti_mem.mem[0]] #b11100110001111111101101111101111)
assume (= [hasti_mem.mem[10]] #b10000001101100101001101010010011)
assume (= [hasti_mem.mem[11]] #b10100000111101110111110100000111)
assume (= [hasti_mem.mem[12]] #b01111110111010000011111110111111)
assume (= [hasti_mem.mem[13]] #b11011111101111010011111111110111)
assume (= [hasti_mem.mem[14]] #b11111011101111110111110111110111)
assume (= [hasti_mem.mem[15]] #b11111011111111000111110111100111)
assume (= [hasti_mem.mem[16]] #b01111100111111111100111011101111)
assume (= [hasti_mem.mem[17]] #b01001001100101110111011111101011)
assume (= [hasti_mem.mem[18]] #b10111111000000011000111010100011)
assume (= [hasti_mem.mem[19]] #b00110100101110000111110100010011)
assume (= [hasti_mem.mem[1]] #b10000110111100010101000100110011)
assume (= [hasti_mem.mem[20]] #b00000100100000111000100110010011)
assume (= [hasti_mem.mem[21]] #b01001100111010111100111110111111)
assume (= [hasti_mem.mem[22]] #b01000000000010010011011100010111)
assume (= [hasti_mem.mem[23]] #b10001101110010011101011101110111)
assume (= [hasti_mem.mem[24]] #b00001110011001010000000001110011)
assume (= [hasti_mem.mem[25]] #b11011111111111000011111101101111)
assume (= [hasti_mem.mem[26]] #b11111110111011111111111011111111)
assume (= [hasti_mem.mem[27]] #b11101111111111111111111110111111)
assume (= [hasti_mem.mem[28]] #b11111110001110110111101110110001)
assume (= [hasti_mem.mem[29]] #b11111110111010111101111111111011)
assume (= [hasti_mem.mem[2]] #b00000011010100010000000001100011)
assume (= [hasti_mem.mem[30]] #b00000010111111110101111110110011)
assume (= [hasti_mem.mem[31]] #b01111001000110010001111111110011)
assume (= [hasti_mem.mem[3]] #b00000010111100010010001010110011)
assume (= [hasti_mem.mem[4]] #b00101111110100010000110100110011)
assume (= [hasti_mem.mem[5]] #b11101110111001011111110111100111)
assume (= [hasti_mem.mem[6]] #b11111001101111100011110010110001)
assume (= [hasti_mem.mem[7]] #b11111111111111011111110111011111)
assume (= [hasti_mem.mem[8]] #b11111110111011010111111111101101)
assume (= [hasti_mem.mem[9]] #b11011110111011111111111111101111)
assume (= [hasti_mem.p0_state] #b0)
assume (= [hasti_mem.p0_waddr] #b00000000000000000000000001001110)
assume (= [hasti_mem.p0_wsize] #b101)
assume (= [hasti_mem.p0_wvalid] #b1)
assume (= [hasti_mem.p1_bypass[0]] #b1)
assume (= [head_ptr] #b01)
assume (= [next_pc] #b11111111111111111111111111111100)
assume (= [windows[0]] #b00000000000000000000000000001110)
assume (= [windows[1]] #b00000000000000000000000000000000)
assume (= [windows[2]] #b00000000000000000000000000001000)
assume (= (select [events] #b10) #b001)
assume (= (select [events] #b01) #b111)
assume (= (select [events] #b00) #b111)

state 0
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000001011100000001010101111000111)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] true)

state 1
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000001110101100100000100111101001)
assume (= [htif_pcr_req_rw] false)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] #b0)

state 2
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000010000110110100100010100111011101)
assume (= [htif_pcr_req_rw] false)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] #b0)

state 3
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b111110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000000000011000011111111111110010)
assume (= [htif_pcr_req_rw] false)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] false)

state 4
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000000101100001000101100010000011)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] false)

state 5
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000100000001010000000010000001000)
assume (= [htif_pcr_req_rw] false)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] false)

state 6
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000010110010100000100100100010001001)
assume (= [htif_pcr_req_rw] false)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] false)

state 7
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b111110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000010000100000000001000000000010)
assume (= [htif_pcr_req_rw] false)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] false)

state 8
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000001011100000001010101111000111)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] false)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] false)

state 9
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000000010000001010010100111100101)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] false)

state 10
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000010101011000100001000110010110010)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] false)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] false)

state 11
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b111110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000010000110100000000000000111111101)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] false)

state 12
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000000000000000000000000100011001)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] false)

state 13
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000000010100001000000001001101101)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] false)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] false)

state 14
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000001111000000100000000001100110)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] false)

state 15
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b011110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000000010000000000000001100000001)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] false)

state 16
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b010110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000000011100000000000100000000111)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] true)

state 17
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b010110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000111111111111011111111111000001)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] true)
assume (= [reset] #b0)

state 18
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b111110000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000000000000000000000000000000100)
assume (= [htif_pcr_req_rw] true)
assume (= [htif_pcr_req_valid] true)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] #b0)

state 19
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b000000000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000000000000000000000000000000000)
assume (= [htif_pcr_req_rw] false)
assume (= [htif_pcr_req_valid] false)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] false)

state 20
assume (= [arbiter_next_core] false)
assume (= [clk] false)
assume (= [htif_pcr_req_addr] #b000000000000)
assume (= [htif_pcr_req_data] #b0000000000000000000000000000000000000000000000000000000000000000)
assume (= [htif_pcr_req_rw] false)
assume (= [htif_pcr_req_valid] false)
assume (= [htif_pcr_resp_ready] false)
assume (= [reset] false)
